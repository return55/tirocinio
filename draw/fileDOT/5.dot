digraph G {
		"Jump-oriented programming: a new class of code-reuse attack" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"Return-oriented programming without returns" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"Privilege escalation attacks on android" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"SecVisor: a tiny hypervisor to provide lifetime kernel code integrity for commodity OSes" -> "The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86";
		"DroidChecker: analyzing android applications for capability leak" -> "Privilege escalation attacks on android";
		"Evolution, Detection and Analysis of Malware for Smart Devices" -> "Privilege escalation attacks on android";
		"Detecting Passive Content Leaks and Pollution in Android Applications." -> "Privilege escalation attacks on android";
		"Practical and lightweight domain isolation on Android" -> "Privilege escalation attacks on android";
		"Flexible and fine-grained mandatory access control on Android for diverse security and privacy policies" -> "Privilege escalation attacks on android";
		"XManDroid: A New Android Evolution to Mitigate Privilege Escalation Attacks" -> "Privilege escalation attacks on android";
		"Effective inter-component communication mapping in Android with Epicc: an essential step towards holistic security analysis" -> "Privilege escalation attacks on android";
		"Why eve and mallory love android: an analysis of android SSL (in)security" -> "Privilege escalation attacks on android";
		"Towards Taming Privilege-Escalation Attacks on Android" -> "Privilege escalation attacks on android";
		"Quire: lightweight provenance for smart phone operating systems" -> "Privilege escalation attacks on android";
		"Systematic Detection of Capability Leaks in Stock Android Smartphones." -> "Privilege escalation attacks on android";
		"CHEX: statically vetting Android apps for component hijacking vulnerabilities" -> "Privilege escalation attacks on android";
		"Permission re-delegation: attacks and defenses" -> "Privilege escalation attacks on android";
		"Locking the sky: a survey on IaaS cloud security" -> "HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity";
		"Eliminating the hypervisor attack surface for a more secure cloud" -> "HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity";
		"HyperSentry: enabling stealthy in-context measurement of hypervisor integrity" -> "HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity";
		"An analysis of security issues for cloud computing" -> "HyperSafe: A Lightweight Approach to Provide Lifetime Hypervisor Control-Flow Integrity";
		"Valgrind: a framework for heavyweight dynamic binary instrumentation" -> "Dynamic Taint Analysis for Automatic Detection, Analysis, and Signature Generation of Exploits on Commodity Software";
		"Taint tracking mechanism for computer security" -> "Control-flow integrity";
		"Bootstrapping Trust in Commodity Computers" -> "Control-flow integrity";
		"Fast byte-granularity software fault isolation" -> "Control-flow integrity";
		"On the difficulty of software-based attestation of embedded devices" -> "Control-flow integrity";
		"Dynamic integrity measurement and attestation: towards defense against return-oriented programming attacks" -> "Control-flow integrity";
		"Bouncer: securing software by blocking bad input" -> "Control-flow integrity";
		"SoK: Automated Software Diversity" -> "Control-flow integrity";
		"ASSURE: automatic software self-healing using rescue points" -> "Control-flow integrity";
		"InkTag: secure applications on an untrusted operating system" -> "Control-flow integrity";
		"CETS: compiler enforced temporal safety for C" -> "Control-flow integrity";
		"DROP: Detecting Return-Oriented Programming Malicious Code" -> "Control-flow integrity";
		"Baggy bounds checking: an efficient and backwards-compatible defense against out-of-bounds errors" -> "Control-flow integrity";
		"Hacking Blind" -> "Control-flow integrity";
		"Evaluating SFI for a CISC architecture" -> "Control-flow integrity";
		"ZOZZLE: fast and precise in-browser JavaScript malware detection" -> "Control-flow integrity";
		"GATEKEEPER: mostly static enforcement of security and reliability policies for javascript code" -> "Control-flow integrity";
		"NOZZLE: a defense against heap-spraying code injection attacks" -> "Control-flow integrity";
		"Secure in-VM monitoring using hardware virtualization" -> "Control-flow integrity";
		"Securing software by enforcing data-flow integrity" -> "Control-flow integrity";
		"SoftBound: highly compatible and complete spatial memory safety for c" -> "Control-flow integrity";
		"Automated detection of persistent kernel control-flow attacks" -> "Control-flow integrity";
		"Control-flow integrity principles, implementations, and applications" -> "Control-flow integrity";
		"XFI: software guards for system address spaces" -> "Control-flow integrity";
		"Lares: An Architecture for Secure Active Monitoring Using Virtualization" -> "Control-flow integrity";
		"Vigilante: end-to-end containment of internet worms" -> "Control-flow integrity";
		"Finding and understanding bugs in C compilers" -> "seL4: formal verification of an OS kernel";
		"S2E: a platform for in-vivo multi-path analysis of software systems" -> "seL4: formal verification of an OS kernel";
		"Dafny: an automatic program verifier for functional correctness" -> "seL4: formal verification of an OS kernel";
		"TrustVisor: Efficient TCB Reduction and Attestation" -> "seL4: formal verification of an OS kernel";
		"The multikernel: a new OS architecture for scalable multicore systems" -> "seL4: formal verification of an OS kernel";
		"Z3: an efficient SMT solver" -> "Vigilante: end-to-end containment of internet worms";
		"Secure program execution via dynamic information flow tracking" -> "Smashing the stack for fun and profit";
		"On the effectiveness of address-space randomization" -> "Smashing the stack for fun and profit";
		"The geometry of innocent flesh on the bone: return-into-libc without function calls (on the x86" -> "Smashing the stack for fun and profit";
		"Control-flow integrity" -> "On the effectiveness of address-space randomization";
		"Dynamic Taint Analysis for Automatic Detection, Analysis, and Signature Generation of Exploits on Commodity Software" -> "On the effectiveness of address-space randomization";
		"seL4: formal verification of an OS kernel" -> "SecVisor: a tiny hypervisor to provide lifetime kernel code integrity for commodity OSes";
		"SMART: Secure and Minimal Architecture for (Establishing a Dynamic) Root of Trust" -> "Return-oriented programming without returns";
		"Control-flow bending: on the effectiveness of control-flow integrity" -> "Return-oriented programming without returns";
		"ILR: Where'd My Gadgets Go?" -> "Return-oriented programming without returns";
		"ROPecker: A Generic and Practical Approach For Defending Against ROP Attacks" -> "Return-oriented programming without returns";
		"Q: exploit hardening made easy" -> "Return-oriented programming without returns";
		"Counterfeit Object-oriented Programming: On the Difficulty of Preventing Code Reuse Attacks in C++ Applications" -> "Return-oriented programming without returns";
		"ROP is still dangerous: breaking modern defenses" -> "Return-oriented programming without returns";
		"Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications." -> "Return-oriented programming without returns";
		"Enforcing forward-edge control-flow integrity in GCC & LLVM" -> "Return-oriented programming without returns";
		"Stitching the gadgets: on the ineffectiveness of coarse-grained control-flow integrity protection" -> "Return-oriented programming without returns";
		"Code-pointer integrity" -> "Return-oriented programming without returns";
		"Transparent ROP exploit mitigation using indirect branch tracing" -> "Return-oriented programming without returns";
		"Out of Control: Overcoming Control-Flow Integrity" -> "Return-oriented programming without returns";
		"ROPdefender: a detection tool to defend against return-oriented programming attacks" -> "Return-oriented programming without returns";
		"Binary stirring: self-randomizing instruction addresses of legacy x86 binary code" -> "Return-oriented programming without returns";
		"Smashing the Gadgets: Hindering Return-Oriented Programming Using In-place Code Randomization" -> "Return-oriented programming without returns";
		"Return-Oriented Programming: Systems, Languages, and Applications" -> "Return-oriented programming without returns";
		"SoK: Eternal War in Memory" -> "Return-oriented programming without returns";
		"Control flow integrity for COTS binaries" -> "Return-oriented programming without returns";
		"Just-In-Time Code Reuse: On the Effectiveness of Fine-Grained Address Space Layout Randomization" -> "Return-oriented programming without returns";
		"Practical Control Flow Integrity and Randomization for Binary Executables" -> "Return-oriented programming without returns";
		"TaintDroid: an information-flow tracking system for realtime privacy monitoring on smartphones" -> "Secure program execution via dynamic information flow tracking";
		"TaintDroid: an information flow tracking system for real-time privacy monitoring on smartphones" -> "Secure program execution via dynamic information flow tracking";
		"TaintDroid: An Information-Flow Tracking System for Realtime Privacy Monitoring on Smartphones" -> "Secure program execution via dynamic information flow tracking";
		"DKSM: Subverting Virtual Machine Introspection for Fun and Profit" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Mapping kernel objects to enable systematic integrity checking" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Defeating return-oriented rootkits with " Return-Less " kernels" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Enhanced operating system security through efficient and fine-grained address space randomization" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Cloud security is not (just) virtualization security: a short paper" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"G-Free: defeating return-oriented programming through gadget-less binaries" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Countering kernel rootkits with lightweight hook protection" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Return-oriented rootkits: bypassing kernel code integrity protection mechanisms" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"The turtles project: design and implementation of nested virtualization" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"CloudVisor: retrofitting protection of virtual machines in multi-tenant cloud with nested virtualization" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Secure virtualization for cloud computing" -> "Guest-Transparent Prevention of Kernel Rootkits with VMM-Based Memory Shadowing";
		"Dissecting Android Malware: Characterization and Evolution" -> "TaintDroid: an information flow tracking system for real-time privacy monitoring on smartphones";
		"On the Security of the TLS Protocol: A Systematic Analysis" -> "Why eve and mallory love android: an analysis of android SSL (in)security";
		"An empirical study of cryptographic misuse in android applications" -> "Why eve and mallory love android: an analysis of android SSL (in)security";
		"Amandroid: A Precise and General Inter-component Data Flow Analysis Framework for Security Vetting of Android Apps" -> "Why eve and mallory love android: an analysis of android SSL (in)security";
		"Lucky Thirteen: Breaking the TLS and DTLS Record Protocols" -> "Why eve and mallory love android: an analysis of android SSL (in)security";
		"IccTA: detecting inter-component privacy leaks in Android apps" -> "Why eve and mallory love android: an analysis of android SSL (in)security";
		"PScout: analyzing the Android permission specification" -> "CHEX: statically vetting Android apps for component hijacking vulnerabilities";
		"FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps" -> "CHEX: statically vetting Android apps for component hijacking vulnerabilities";
		"Fast, scalable detection of "Piggybacked" mobile applications" -> "Detecting Passive Content Leaks and Pollution in Android Applications.";
		"Hypervision Across Worlds: Real-time Kernel Protection from the ARM TrustZone Secure World" -> "Practical Control Flow Integrity and Randomization for Binary Executables";
		"SOK: (State of) The Art of War: Offensive Techniques in Binary Analysis" -> "SoK: Eternal War in Memory";
		"VC3: Trustworthy Data Analytics in the Cloud Using SGX" -> "SoK: Eternal War in Memory";
		"Android Security: A Survey of Issues, Malware Penetration, and Defenses" -> "Evolution, Detection and Analysis of Malware for Smart Devices";
		"A New Android Malware Detection Approach Using Bayesian Classification" -> "DroidChecker: analyzing android applications for capability leak";
		"SmartDroid: an automatic system for revealing UI-based trigger conditions in android applications" -> "DroidChecker: analyzing android applications for capability leak";
		"Vetting undesirable behaviors in android apps with permission use analysis" -> "DroidChecker: analyzing android applications for capability leak";
		"Practical Timing Side Channel Attacks against Kernel Space ASLR" -> "Q: exploit hardening made easy";
		"Unleashing Mayhem on Binary Code" -> "Q: exploit hardening made easy";
		"Automatic exploit generation" -> "Q: exploit hardening made easy";
		"A Descriptive Literature Review and Classification of Cloud Computing Research" -> "Secure virtualization for cloud computing";
		"A survey on gaps, threat remediation challenges and some thoughts for proactive attack detection in cloud computing" -> "Secure virtualization for cloud computing";
		"Resource management for Infrastructure as a Service (IaaS) in cloud computing: A survey" -> "Secure virtualization for cloud computing";
		"Security in cloud computing" -> "Secure virtualization for cloud computing";
		"Shielding applications from an untrusted cloud with Haven" -> "CloudVisor: retrofitting protection of virtual machines in multi-tenant cloud with nested virtualization";
		"Shielding Applications from an Untrusted Cloud with Haven" -> "CloudVisor: retrofitting protection of virtual machines in multi-tenant cloud with nested virtualization";
		"MobiCloud: Building Secure Cloud Framework for Mobile Computing and Communication" -> "Cloud security is not (just) virtualization security: a short paper";
		"Security issues in cloud environments: a survey" -> "Cloud security is not (just) virtualization security: a short paper";
		"Cloud computing security" -> "Cloud security is not (just) virtualization security: a short paper";
		"Security and Privacy in Cloud Computing" -> "Cloud security is not (just) virtualization security: a short paper";
		"AppContext: differentiating malicious and benign mobile app behaviors using context" -> "Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications.";
		"ANDRUBIS -- 1,000,000 Apps Later: A View on Current Android Malware Behaviors" -> "Execute This! Analyzing Unsafe and Malicious Dynamic Code Loading in Android Applications.";
		"Controlled-Channel Attacks: Deterministic Side Channels for Untrusted Operating Systems" -> "Enhanced operating system security through efficient and fine-grained address space randomization";
		"Automated Whitebox Fuzz Testing." -> "Valgrind: a framework for heavyweight dynamic binary instrumentation";
		"Fast and SNP-tolerant detection of complex variants and splicing in short reads" -> "Valgrind: a framework for heavyweight dynamic binary instrumentation";
		"Protecting Browsers from Extension Vulnerabilities" -> "Control-flow integrity principles, implementations, and applications";
		"Preventing Memory Error Exploits with WIT" -> "Control-flow integrity principles, implementations, and applications";
		"N-variant systems: a secretless framework for security through diversity" -> "Control-flow integrity principles, implementations, and applications";
		"Effective and efficient malware detection at the end host" -> "Automated detection of persistent kernel control-flow attacks";
		"ConScript: Specifying and Enforcing Fine-Grained Security Policies for JavaScript in the Browser" -> "GATEKEEPER: mostly static enforcement of security and reliability policies for javascript code";
		"The essence of javascript" -> "GATEKEEPER: mostly static enforcement of security and reliability policies for javascript code";
		"Staged information flow for javascript" -> "GATEKEEPER: mostly static enforcement of security and reliability policies for javascript code";
		"A Symbolic Execution Framework for JavaScript" -> "GATEKEEPER: mostly static enforcement of security and reliability policies for javascript code";
		"Security and privacy challenges in industrial internet of things" -> "SMART: Secure and Minimal Architecture for (Establishing a Dynamic) Root of Trust";
		"ELI: bare-metal performance for I/O virtualization" -> "The turtles project: design and implementation of nested virtualization";
		"Resource Management in Clouds: Survey and Research Challenges" -> "The turtles project: design and implementation of nested virtualization";
		"Data Center Network Virtualization: A Survey" -> "Eliminating the hypervisor attack surface for a more secure cloud";
		"Cloud computing services: taxonomy and comparison" -> "Locking the sky: a survey on IaaS cloud security";
		"OpenStack: Toward an Open-source Solution for Cloud Computing" -> "Locking the sky: a survey on IaaS cloud security";
		"Privacy, Security and Trust in Cloud Computing" -> "Locking the sky: a survey on IaaS cloud security";
		"Native Client: a sandbox for portable, untrusted x86 native code" -> "XFI: software guards for system address spaces";
		"Native Client: A Sandbox for Portable, Untrusted x86 Native Code" -> "XFI: software guards for system address spaces";
		"A survey on security issues and solutions at different layers of Cloud computing" -> "DKSM: Subverting Virtual Machine Introspection for Fun and Profit";
		"Virtuoso: Narrowing the Semantic Gap in Virtual Machine Introspection" -> "DKSM: Subverting Virtual Machine Introspection for Fun and Profit";
		"Review: A survey of intrusion detection techniques in Cloud" -> "DKSM: Subverting Virtual Machine Introspection for Fun and Profit";
		"Automatically patching errors in deployed software" -> "ASSURE: automatic software self-healing using rescue points";
		"GenProg: A Generic Method for Automatic Software Repair" -> "ASSURE: automatic software self-healing using rescue points";
		"Policy-sealed data: a new abstraction for building trusted cloud services" -> "Bootstrapping Trust in Commodity Computers";
		"IX: a protected dataplane operating system for high throughput and low latency" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"PTask: operating system abstractions to manage GPUs as compute devices" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"Arrakis: The Operating System Is the Control Plane" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"Unikernels: library operating systems for the cloud" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"NOVA: a microhypervisor-based secure virtualization architecture" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"An analysis of Linux scalability to many cores" -> "The multikernel: a new OS architecture for scalable multicore systems";
		"Prophiler: a fast filter for the large-scale detection of malicious web pages" -> "NOZZLE: a defense against heap-spraying code injection attacks";
		"Detection and analysis of drive-by-download attacks and malicious JavaScript code" -> "NOZZLE: a defense against heap-spraying code injection attacks";
		"KLEE: unassisted and automatic generation of high-coverage tests for complex systems programs" -> "Bouncer: securing software by blocking bad input";
		"DREBIN: Effective and Explainable Detection of Android Malware in Your Pocket." -> "ZOZZLE: fast and precise in-browser JavaScript malware detection";
		"Fast track article: Looking ahead in pervasive computing: Challenges and opportunities in the era of cyber-physical convergence" -> "On the difficulty of software-based attestation of embedded devices";
		"Cyber–Physical System Security for the Electric Power Grid" -> "On the difficulty of software-based attestation of embedded devices";
		"Detecting malicious network content using virtual environment components" -> "Taint tracking mechanism for computer security";
		"Systems and methods for detecting malicious PDF network content" -> "Taint tracking mechanism for computer security";
		"Electronic Message Analysis for Malware Detection" -> "Taint tracking mechanism for computer security";
		"Network-based binary file extraction and analysis for malware detection" -> "Taint tracking mechanism for computer security";
		"Systems and Methods for Detecting Malicious Network Content" -> "Taint tracking mechanism for computer security";
		"RiskRanker: scalable and accurate zero-day android malware detection" -> "Dissecting Android Malware: Characterization and Evolution";
		"DroidScope: seamlessly reconstructing the OS and Dalvik semantic views for dynamic Android malware analysis" -> "Dissecting Android Malware: Characterization and Evolution";
		"An executable formal semantics of C with applications" -> "Finding and understanding bugs in C compilers";
		"Triple Handshakes and Cookie Cutters: Breaking and Fixing Authentication over TLS" -> "Lucky Thirteen: Breaking the TLS and DTLS Record Protocols";
		"A Messy State of the Union: Taming the Composite State Machines of TLS" -> "Lucky Thirteen: Breaking the TLS and DTLS Record Protocols";
		"On the security of RC4 in TLS" -> "Lucky Thirteen: Breaking the TLS and DTLS Record Protocols";
		"Post-Quantum Key Exchange for the TLS Protocol from the Ring Learning with Errors Problem" -> "On the Security of the TLS Protocol: A Systematic Analysis";
		"Lucy in the sky without diamonds: Stealing confidential data in the cloud" -> "TrustVisor: Efficient TCB Reduction and Attestation";
		"ObliviStore: High Performance Oblivious Cloud Storage" -> "TrustVisor: Efficient TCB Reduction and Attestation";
		"Intel SGX Explained." -> "TrustVisor: Efficient TCB Reduction and Attestation";
		"Outsourcing the decryption of ABE ciphertexts" -> "TrustVisor: Efficient TCB Reduction and Attestation";
		"Behavioral interface specification languages" -> "Dafny: an automatic program verifier for functional correctness";
		"Why3: Shepherd Your Herd of Provers" -> "Dafny: an automatic program verifier for functional correctness";
		"Android taint flow analysis for app sets" -> "FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps";
		"Automated Test Input Generation for Android: Are We There Yet? (E" -> "FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps";
		"Semantics-Aware Android Malware Classification Using Weighted Contextual API Dependency Graphs" -> "FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps";
		"Information-Flow Analysis of Android Applications in DroidSafe" -> "FlowDroid: precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for Android apps";
		"The impact of vendor customizations on android security" -> "PScout: analyzing the Android permission specification";
		"Security Analysis of Emerging Smart Home Applications" -> "PScout: analyzing the Android permission specification";
		"PUMA: programmable UI-automation for large-scale dynamic analysis of mobile apps" -> "PScout: analyzing the Android permission specification";
		"A Machine-learning Approach for Classifying and Categorizing Android Sources and Sinks" -> "PScout: analyzing the Android permission specification";
		"Checking app behavior against app descriptions" -> "PScout: analyzing the Android permission specification";
		"WHYPER: towards automating risk assessment of mobile applications" -> "PScout: analyzing the Android permission specification";
		"Achieving accuracy and scalability simultaneously in detecting application clones on Android markets" -> "Fast, scalable detection of "Piggybacked" mobile applications";
		"A measurement study of google play" -> "Fast, scalable detection of "Piggybacked" mobile applications";
		"Apposcopy: semantics-based detection of Android malware through static analysis" -> "Fast, scalable detection of "Piggybacked" mobile applications";
		"CopperDroid: Automatic Reconstruction of Android Malware Behaviors" -> "Vetting undesirable behaviors in android apps with permission use analysis";
		"AppIntent: analyzing sensitive data transmission in android for privacy leakage detection" -> "Vetting undesirable behaviors in android apps with permission use analysis";
		"AppsPlayground: automatic security analysis of smartphone applications" -> "SmartDroid: an automatic system for revealing UI-based trigger conditions in android applications";
		"On-Line Behavioral Analysis Engine in Mobile Device with Multiple Analyzer Model Providers" -> "A New Android Malware Detection Approach Using Bayesian Classification";
		"An orchestrated survey of methodologies for automated software test case generation" -> "S2E: a platform for in-vivo multi-path analysis of software systems";
}